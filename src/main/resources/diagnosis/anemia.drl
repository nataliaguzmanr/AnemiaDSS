
package diagnosis;


unit PatientUnit;

import diagnosis.Anemia
import diagnosis.AnemiaType


rule "Anemic Syndrome due to low Hb"
when
    $patient : /patients[detectSymptomValue("Hb")<8]
then
    Anemia a = new Anemia (1, AnemiaType.ANEMIC_SYNDROME);
    $patient.addAnemia(a);
    //do not apply the modify (dont want to consider as a new fact to which the rule can be applied)
    patientsWithAnemicSyndrome.add($patient);
   //System.out.println( $patient + " Anemic Syndrome. ");
end

/*rule "Anemic Syndrome due to tinnitius"
when
    $patient : /patients[detectQuanlitativeSymptom("tinnitius")]
then
    Anemia a = new Anemia (1, AnemiaType.ANEMIC_SYNDROME);
    modify ($patient) {
    addAnemia(a)
    }
    patientsWithAnemicSyndrome.add($patient);
    System.out.println( $patient + " Anemic Syndrome - tinnitius ");
end*/


//9. sin completar, no se hacer compuestas :) o no se obtener el genero :/

rule "Return gender"
when
    $patient : /patients[getGender().equals("MALE")]

then
   System.out.println("male");

end*/


//SIN TERMINAR F
rule "9. PosthemorragicAnemiaRBC"
when
    $patient : /patients[detectSymptomValue("RBC")<4.5] //and /patients[getGender().equals("MALE")]

then
    Anemia a = new Anemia (2, AnemiaType.POSTHEMORRAGIC_ANEMIA);
    $patient.addAnemia(a);
    patientsWithPosthemorrhagicAnemia.add($patient);

end


rule "10. PosthemorragicAnemiaMCHC"
when
    $patient : /patients[detectSymptomValue("MHCH")<310]

then
    Anemia a = new Anemia (2, AnemiaType.POSTHEMORRAGIC_ANEMIA);
    $patient.addAnemia(a);
    patientsWithPosthemorrhagicAnemia.add($patient);

end

rule "11. PosthemorragicAnemiaFe"
when
    $patient : /patients[detectSymptomValue("Fe")<60]

then
    Anemia a = new Anemia (2, AnemiaType.POSTHEMORRAGIC_ANEMIA);
    $patient.addAnemia(a);
    patientsWithPosthemorrhagicAnemia.add($patient);

end


rule "16. HemolyticAnemiaMCH>"
when
    $patient : /patients[detectSymptomValue("MCH")>32]

then
    Anemia a = new Anemia (3, AnemiaType.HEMOLYTIC_ANEMIA);
    $patient.addAnemia(a);
    patientsWithHemolyticAnemia.add($patient);

end

rule "19. HemolyticAnemiaFe"
when
    $patient : /patients[detectSymptomValue("Fe")>170]

then
    Anemia a = new Anemia (3, AnemiaType.HEMOLYTIC_ANEMIA);
    $patient.addAnemia(a);
    patientsWithHemolyticAnemia.add($patient);

end

rule "20. HemolyticAnemiaHaptoglobin"
when
    $patient : /patients[detectSymptomValue("Haptoglobin")<41]

then
    Anemia a = new Anemia (3, AnemiaType.HEMOLYTIC_ANEMIA);
    $patient.addAnemia(a);
    patientsWithHemolyticAnemia.add($patient);

end

rule "28. IronDefAnemiaMCH<"
when
    $patient : /patients[detectSymptomValue("MCH")<27]

then
    Anemia a = new Anemia (6, AnemiaType.IRON_DEFICIENCY_ANEMIA);
    $patient.addAnemia(a);
    patientsWithIronDeficiencyAnemia.add($patient);

end










//----------------------------
/*
unit OperationUnit;

rule "authorization of operations"
when
    $operation : /operations[verified == true, date_expired == false, correctPin == true, tries == Tries.NOT_EXPIRED, balance >= price, limit >= price]
then
    // IF I WANT TO DEBUG THE CODE, I CAN PRINT HERE WHATEVER I WANT System.out.println( op );
    System.out.println( $operation + " authorized. ");
    // Student, please try to do this instead of modify like before. What is the difference?
    //$operation.setAuthorized(true);
    // or
    modify ($operation) {
    setAuthorized(true)
    }
    System.out.println( $operation + " authorized. ");
end

rule "invalid verification"
when
    $operation : /operations[verified == false]
then
    System.out.println( $operation + " not authorized due to lack of verification. ");
    modify ($operation) { setAuthorized(false)}
    operationsUnauthorizedNotVerified.add($operation);
end

rule "exceeded limit"
when
    $operation : /operations[limit < price]
then
    System.out.println( $operation + " not authorized due to limit. ");
    modify ($operation) { setAuthorized(false)}
    operationsUnauthorizedExceededLimit.add($operation);
end

query FindAuthorizedOperations
    $operations : /operations[ authorized == true]
end
*/
